apiVersion: v1
kind: Service
metadata:
  name: "{{ .Values.service.name }}-service"
  labels:
    app: "{{ .Values.service.name }}-app"
    tier: backend
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: "{{ .Values.service.name }}-app"
    tier: backend
  ports:
  - name: http
    port: 3033
    targetPort: 3033
    protocol: "TCP"
  - name: ws
    port: 4033
    targetPort: 4033
    protocol: "TCP"

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.service.name }}-deployment"
  labels:
    app: "{{ .Values.service.name }}-app"
    tier: backend
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: "{{ .Values.service.name }}-app"
      tier: backend
  template:
    metadata:
      labels:
        app: "{{ .Values.service.name }}-app"
        tier: backend
    spec:
      containers:
      - name: "{{ .Values.service.name }}-container"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        env:
        - name: rauth
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapKeyRef.name }}
              key: rauth
        - name: cert
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapKeyRef.name }}
              key: cert
        - name: RDB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapKeyRef.name }}
              key: RDB_HOST
        - name: RDB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapKeyRef.name }}
              key: RDB_PORT
        - name: domainKey
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapKeyRef.name }}
              key: domainKey
        - name: SMTP_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapKeyRef.name }}
              key: SMTP_USER
        - name: SMTP_PASS
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapKeyRef.name }}
              key: SMTP_PASS
        - name: SMTP_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMapKeyRef.name }}
              key: SMTP_HOST
        ports:
        - containerPort: 3033
          name: port1
        - containerPort: 4033
          name: port2
        imagePullPolicy: {{ .Values.image.pullPolicy }}
